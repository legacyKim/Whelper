1. **Python 설치:**
   - 먼저 Python을 설치합니다. [Python 공식 웹사이트](https://www.python.org/downloads/)에서 최신 버전의 Python을 다운로드하여 설치합니다.

2. **가상 환경 생성 (선택사항):**
   - 프로젝트마다 독립된 가상 환경을 생성하는 것이 좋습니다. 가상 환경은 의존성을 격리하고 관리하는데 도움이 됩니다.

     # 가상 환경 생성
     python -m venv venv

     # Windows에서 가상 환경 활성화
     .\venv\Scripts\activate


3. **`pip` 업그레이드 (선택사항):**
   - `pip`를 최신 버전으로 업그레이드할 수 있습니다.

     pip install --upgrade pip

4. **프로젝트 디렉토리로 이동:**
   - 터미널이나 명령 프롬프트에서 프로젝트의 루트 디렉토리로 이동합니다.

5. **의존성 설치:**
   - `requirements.txt` 파일이 있는 디렉토리에서 다음 명령을 실행하여 의존성을 설치합니다.

     pip install -r requirements.txt

위 단계를 따라하면 `pip`를 사용하여 `requirements.txt` 파일에 명시된 패키지들이 설치됩니다.

==================================================================

- python 및 mySql 공부

    1. ** Python 기초 공부 **
        - Python의 기본 문법, 데이터 타입, 함수, 클래스 등을 학습합니다.
        - Python의 특징 중 하나인 가독성과 간결함에 익숙해지세요.

    2. ** MySQL 학습 **
        - MySQL의 기초적인 SQL 쿼리문과 데이터베이스 설계에 대한 이해를 쌓습니다.
        - MySQL Workbench나 터미널을 사용하여 데이터베이스를 관리하는 방법을 익힙니다.

    3. ** Python과 MySQL 연동 **
        - `mysql-connector-python`이나 `pymysql`과 같은 라이브러리를 사용하여 Python에서 MySQL과 연동하는 방법을 익힙니다.
        - 간단한 쿼리 실행 및 데이터베이스 조회 등을 실습해봅니다.

    4. ** Flask 프레임워크 공부 **
        - Flask는 Python 웹 프레임워크 중 하나로, 간단하면서도 강력한 도구입니다.
        - Flask를 사용하여 간단한 웹 어플리케이션을 만들어보며 서버 측면에서의 기본적인 이해를 갖춥니다.

    5. ** RESTful API 구축 **
        - Flask를 사용하여 RESTful API를 구축하는 방법을 학습합니다.
        - API 엔드포인트를 만들고, 데이터를 받아오거나 전송하는 방법을 연습합니다.

    6. ** React와의 연동 **
        - React 애플리케이션과 Flask 서버를 연동하여 데이터를 주고받는 방법을 익히세요.
        - Axios 또는 Fetch API를 사용하여 클라이언트와 서버 간 통신을 구현합니다.

    7. ** 추가적인 기능 및 보안 고려 **
        - 사용자 인증, 권한 관리, 데이터 보안 등과 관련된 주제를 공부합니다.